// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.Contexts;

#nullable disable

namespace TodoApi.Migrations
{
    [DbContext(typeof(ApiDb))]
    [Migration("20220301182249_newmigratio43")]
    partial class newmigratio43
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.2");

            modelBuilder.Entity("TodoApi.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "d@j.com1",
                            Name = "Customer1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "d@j.com2",
                            Name = "Customer2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "d@j.com3",
                            Name = "Customer3"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.CustomerAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId")
                        .IsUnique();

                    b.ToTable("CustomerAddresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "City1",
                            CustomerId = 1,
                            State = "CA",
                            Street = "Street1",
                            ZipCode = "22341"
                        },
                        new
                        {
                            Id = 2,
                            City = "City2",
                            CustomerId = 2,
                            State = "CA",
                            Street = "Street2",
                            ZipCode = "22342"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("OrderDetailsId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderDetailsId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CustomerId = 1L,
                            Date = "1999-04-03",
                            OrderTotal = 12.32m
                        },
                        new
                        {
                            Id = 2L,
                            CustomerId = 2L,
                            Date = "1999-04-03",
                            OrderTotal = 12.32m
                        },
                        new
                        {
                            Id = 3L,
                            CustomerId = 3L,
                            Date = "1999-04-03",
                            OrderTotal = 12.32m
                        });
                });

            modelBuilder.Entity("TodoApi.Models.OrderDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 5,
                            Quantity = 12
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 2,
                            ProductId = 6,
                            Quantity = 5
                        },
                        new
                        {
                            Id = 3,
                            OrderId = 3,
                            ProductId = 2,
                            Quantity = 22
                        });
                });

            modelBuilder.Entity("TodoApi.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Description = "descript1",
                            Manufacturer = "homedepot1",
                            Name = "name1",
                            Price = 42.15m,
                            Sku = "23451",
                            Type = "Hello1"
                        },
                        new
                        {
                            Id = 2L,
                            Description = "descript2",
                            Manufacturer = "homedepot2",
                            Name = "name2",
                            Price = 42.25m,
                            Sku = "23452",
                            Type = "Hello2"
                        },
                        new
                        {
                            Id = 3L,
                            Description = "descript3",
                            Manufacturer = "homedepot3",
                            Name = "name3",
                            Price = 42.35m,
                            Sku = "23453",
                            Type = "Hello3"
                        },
                        new
                        {
                            Id = 9L,
                            Description = "descript9",
                            Manufacturer = "homedepot9",
                            Name = "name9",
                            Price = 42.95m,
                            Sku = "29459",
                            Type = "Hello9"
                        },
                        new
                        {
                            Id = 4L,
                            Description = "descript4",
                            Manufacturer = "homedepot4",
                            Name = "name4",
                            Price = 42.45m,
                            Sku = "23454",
                            Type = "Hello4"
                        },
                        new
                        {
                            Id = 5L,
                            Description = "descript5",
                            Manufacturer = "homedepot5",
                            Name = "name5",
                            Price = 42.55m,
                            Sku = "23455",
                            Type = "Hello5"
                        },
                        new
                        {
                            Id = 6L,
                            Description = "descript6",
                            Manufacturer = "homedepot6",
                            Name = "name6",
                            Price = 42.65m,
                            Sku = "23456",
                            Type = "Hello6"
                        },
                        new
                        {
                            Id = 7L,
                            Description = "descript7",
                            Manufacturer = "homedepot7",
                            Name = "name7",
                            Price = 42.75m,
                            Sku = "23457",
                            Type = "Hello7"
                        },
                        new
                        {
                            Id = 8L,
                            Description = "descript8",
                            Manufacturer = "homedepot8",
                            Name = "name8",
                            Price = 42.85m,
                            Sku = "23458",
                            Type = "Hello8"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Roles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "d@j.com",
                            Name = "David",
                            Password = "123pw",
                            Roles = "[EMPLOYEE, ADMIN]",
                            Title = "Janitor"
                        },
                        new
                        {
                            Id = 2,
                            Email = "A@j.com",
                            Name = "Amir",
                            Password = "123pw",
                            Roles = "[EMPLOYEE]",
                            Title = "Cleaner"
                        },
                        new
                        {
                            Id = 3,
                            Email = "h@j.com",
                            Name = "Hayes",
                            Password = "123pw",
                            Roles = "[EMPLOYEE, ADMIN]",
                            Title = "Boss"
                        },
                        new
                        {
                            Id = 4,
                            Email = "c@j.com",
                            Name = "Cody",
                            Password = "123pw",
                            Roles = "[ADMIN]",
                            Title = "HR"
                        },
                        new
                        {
                            Id = 5,
                            Email = "j@j.com",
                            Name = "Joe",
                            Password = "123pw",
                            Roles = "[ADMIN]",
                            Title = "Janitor"
                        });
                });

            modelBuilder.Entity("TodoApi.Models.CustomerAddress", b =>
                {
                    b.HasOne("TodoApi.Models.Customer", null)
                        .WithOne("CustomerAddress")
                        .HasForeignKey("TodoApi.Models.CustomerAddress", "CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoApi.Models.Order", b =>
                {
                    b.HasOne("TodoApi.Models.OrderDetails", "OrderDetails")
                        .WithMany()
                        .HasForeignKey("OrderDetailsId");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("TodoApi.Models.Customer", b =>
                {
                    b.Navigation("CustomerAddress");
                });
#pragma warning restore 612, 618
        }
    }
}
